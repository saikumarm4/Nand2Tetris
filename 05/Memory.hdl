// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * RAM16K
 * IN in[16], load, address[14];
 * OUT out[16];
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    
	Not(in=address[14], out=datasel);
	And(a=datasel, b=load, out=dataload);
	RAM16K(in=in, load=dataload, address=address[0..13], out=dataout);
	
	And(a=address[14], b=load, out=screensel);
	Screen(in=in ,load=screensel, address=address[0..12], out=scrout);
	
	And(a=address[14], b=address[13], out=kbdsel1);
	Keyboard(out=kdbout);
		
	Mux8Way16(a[0..15]=kdbout, b=dataout, c=scrout, d[0..15]=false,
			  e[0..15]=kdbout, f[0..15]=kdbout, g[0..15]=kdbout, h[0..15]=kdbout,
			  sel[0]=datasel, sel[1]=address[14], sel[2]=kbdsel1, out=out);
}